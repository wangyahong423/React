{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["Todoinput","handleInput","e","keyCode","target","value","props","add","className","type","onKeyDown","this","placeholder","Component","Todoing","todoList","style","position","doing","map","item","index","done","key","onClick","change","margin","title","del","checked","readOnly","Todolist","addItem","data","console","log","todo","setState","state","delItem","splice","changeItem","JSON","parse","localStorage","getItem","setItem","stringify","forEach","ReactDOM","render","document","getElementById"],"mappings":"0PAGqBA,G,iNACjBC,YAAc,SAACC,GACM,KAAdA,EAAEC,SAAqC,KAAnBD,EAAEE,OAAOC,QAC5B,EAAKC,MAAMC,IAAIL,EAAEE,OAAOC,OACxBH,EAAEE,OAAOC,MAAQ,K,wEAIrB,OACI,6BACI,yBAAKG,UAAU,UACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,MAAf,YACA,2BAAOC,KAAK,OAAOC,UAAWC,KAAKV,YAAaO,UAAU,KAAKI,YAAY,4B,GAb5DC,cCDlBC,E,iLACP,IAAD,OACAC,EAAYJ,KAAKL,MAAjBS,SACL,OACI,yBAAKP,UAAU,OACX,wBAAIQ,MAAO,CAACC,SAAS,aAArB,2BAAsC,8BAAON,KAAKL,MAAMY,QACxD,4BACIH,EAASI,KAAI,SAACC,EAAMC,GAChB,OAAkB,IAAdD,EAAKE,KAED,wBAAIC,IAAKF,GACL,2BAAOZ,KAAK,WAAWe,QAAS,kBAAI,EAAKlB,MAAMmB,OAAOJ,MACtD,uBAAGL,MAAO,CAACU,OAAO,MAAON,EAAKO,OAC9B,uBAAGnB,UAAU,MAAMgB,QAAS,kBAAI,EAAKlB,MAAMsB,IAAIP,KAA/C,MAIL,OAIf,wBAAIL,MAAO,CAACC,SAAS,aAArB,2BAAsC,8BAAON,KAAKL,MAAMgB,OACxD,4BACIP,EAASI,KAAI,SAACC,EAAMC,GAChB,OAAkB,IAAdD,EAAKE,KAED,wBAAIC,IAAKF,GACL,2BAAOZ,KAAK,WAAWe,QAAS,kBAAI,EAAKlB,MAAMmB,OAAOJ,IAAQQ,QAAQ,UAAUC,UAAQ,IACxF,uBAAGd,MAAO,CAACU,OAAO,MAAON,EAAKO,OAC9B,uBAAGnB,UAAU,MAAMgB,QAAS,kBAAI,EAAKlB,MAAMsB,IAAIP,KAA/C,MAIL,Y,GAjCMR,aCEhBkB,E,YACjB,aAAc,IAAD,uBACT,+CAiBJC,QAAU,SAACC,GACPC,QAAQC,IAAIF,GACZ,IAAIG,EAAO,CAAC,MAAQH,EAAK,MAAO,GAChC,EAAKI,SAAS,CACVtB,SAAS,GAAD,mBAAM,EAAKuB,MAAMvB,UAAjB,CAA0BqB,OAtB7B,EAyBbG,QAAU,SAAClB,GACP,IAAIN,EAAQ,YAAO,EAAKuB,MAAMvB,UAC9BA,EAASyB,OAAOnB,EAAM,GACtB,EAAKgB,SAAS,CACVtB,SAAUA,KA7BL,EAgCb0B,WAAa,SAACpB,GACV,IAAIN,EAAQ,YAAO,EAAKuB,MAAMvB,UAC9BA,EAASM,GAAOC,MAAQP,EAASM,GAAOC,KACxC,EAAKe,SAAS,CACVtB,SAASA,KAjCb,IAAIqB,EAAOM,KAAKC,MAAMC,aAAaC,QAAQ,SAHlC,OAML,EAAKP,MAFG,OAATF,EAEc,CACTrB,SAAU,IAKD,CACTA,SAAUqB,GAbT,E,sEA0CTQ,aAAaE,QAAQ,OAAOJ,KAAKK,UAAUpC,KAAK2B,MAAMvB,WAEtD,IAAIG,EAAQ,EAERI,EAAO,EAWX,OATAX,KAAK2B,MAAMvB,SAASiC,SAAQ,SAAA5B,IACP,IAAdA,EAAKE,KACJJ,GAAgB,EAGhBI,GAAc,KAKlB,6BACI,kBAAC,EAAD,CAAWf,IAAKI,KAAKqB,UACrB,kBAAC,EAAD,CAASJ,IAAKjB,KAAK4B,QAASd,OAAQd,KAAK8B,WAAY1B,SAAUJ,KAAK2B,MAAMvB,SAAUG,MAAOA,EAAOI,KAAMA,S,GA7DlFT,aCCtCoC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,U","file":"static/js/main.834180e5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './todo.css';\r\n\r\nexport default class Todoinput extends Component {\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13 && e.target.value !== ''){\r\n            this.props.add(e.target.value);\r\n            e.target.value = '';\r\n        } \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='topdiv'>\r\n                    <div className='top'>\r\n                        <div className='sp' >ToDoList</div>\r\n                        <input type=\"text\" onKeyDown={this.handleInput} className='in' placeholder=\"添加ToDo\" />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        var {todoList} = this.props;\r\n        return (\r\n            <div className='ing'>\r\n                <h2 style={{position:'relative'}}>正在进行<span>{this.props.doing}</span></h2>\r\n                <ul>{\r\n                    todoList.map((item, index) => {\r\n                        if (item.done === false) {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <input type=\"checkbox\" onClick={()=>this.props.change(index)}/>\r\n                                    <p style={{margin:'0'}}>{item.title}</p>\r\n                                    <a className='lip' onClick={()=>this.props.del(index)}>-</a>\r\n                                </li>\r\n                            )\r\n                        }\r\n                        return '';\r\n                    })\r\n                }\r\n                </ul>\r\n                <h2 style={{position:'relative'}}>已经完成<span>{this.props.done}</span></h2>\r\n                <ul>{\r\n                    todoList.map((item, index) => {\r\n                        if (item.done === true) {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <input type=\"checkbox\" onClick={()=>this.props.change(index)} checked=\"checked\" readOnly/>\r\n                                    <p style={{margin:'0'}}>{item.title}</p>\r\n                                    <a className='lip' onClick={()=>this.props.del(index)}>-</a>\r\n                                </li>\r\n                            )\r\n                        }\r\n                        return '';\r\n                    })\r\n                } \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Todoinput from './Todoinput';\r\nimport Todoing from './Todoing';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        //首先获取localStorage，并将其转换为对象\r\n        let todo = JSON.parse(localStorage.getItem('todo'));\r\n        if(todo === null){\r\n            //未存入数据时\r\n            this.state = {\r\n                todoList: []\r\n            }\r\n        }\r\n        else{\r\n            //存入数据\r\n            this.state = {\r\n                todoList: todo\r\n            }\r\n        }\r\n    } \r\n\r\n    addItem = (data) => {\r\n        console.log(data);\r\n        let todo = {\"title\":data,\"done\":false}\r\n        this.setState({\r\n            todoList: [...this.state.todoList,todo]\r\n        })\r\n    }\r\n    delItem = (index) => {\r\n        let todoList = [...this.state.todoList];\r\n        todoList.splice(index,1);\r\n        this.setState({\r\n            todoList: todoList\r\n        })\r\n    }\r\n    changeItem = (index) => {\r\n        let todoList = [...this.state.todoList];\r\n        todoList[index].done = !todoList[index].done;\r\n        this.setState({\r\n            todoList:todoList\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        // 更新localStorage\r\n        localStorage.setItem('todo',JSON.stringify(this.state.todoList));\r\n        //设置一个变量接收正在进行的个数:\r\n        let doing = 0;\r\n        //设置一个变量接收已经完成的个数:\r\n        let done = 0;\r\n        //获取当前状态下，正在进行和已经完成的个数：通过遍历todoList，访问todoList中每个元素的done值来进行计数\r\n        this.state.todoList.forEach(item => {\r\n            if(item.done === false){\r\n                doing = doing + 1;\r\n            }\r\n            else {\r\n                done = done + 1;\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem}/>\r\n                <Todoing del={this.delItem} change={this.changeItem} todoList={this.state.todoList} doing={doing} done={done}/>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todolist from './Todolist/Todolist.js';\n\nReactDOM.render(<Todolist />,document.getElementById('root')) "],"sourceRoot":""}